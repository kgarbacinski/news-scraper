version: '3.8'

networks:
  services-network:
    driver: bridge

services: 

  scraper-app:
    build: services/scraper_app
    command: uvicorn app.endpoints:app --host 0.0.0.0 --port 8000 --reload
    container_name: scraper-app 
    volumes:
      - ./services/scraper_app:/usr/src/app/
    ports:
      - 8004:8000
    networks:
      - services-network
    environment: 
      - DEBUG=1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - JWT_SECRET
      - JWT_ALGORITHM
      - SCRAPER_APP_ADMIN_LOGIN
      - SCRAPER_APP_ADMIN_PASSWORD
      - API_AUTH_TOKEN
      - APP_STAGE=PRODUCTION
    depends_on: 
      - redis


  worker:
      build: ./services/scraper_app
      command: python3 -m celery -A computing.tasks.celery_app worker #--loglevel=DEBUG
      volumes:
        - ./services/scraper_app:/usr/src/app
      networks:
        - services-network
      environment:
        - CELERY_BROKER_URL=redis://redis:6379/0
        - CELERY_RESULT_BACKEND=redis://redis:6379/0
        - API_AUTH_TOKEN
      depends_on:
        - scraper-app
        - redis

  redis:
    image: redis:6-alpine
    networks:
      - services-network


  history-app:
    build: services/history_app
    command: uvicorn app.endpoints:app --host 0.0.0.0 --reload
    hostname: history-app
    container_name: history-app 
    volumes:
      - ./services/history_app:/usr/src/app/
    ports:
      - 8005:8000
    environment:
      - JWT_SECRET
      - JWT_ALGORITHM
      - APP_STAGE=PRODUCTION
    depends_on:
      - history-db
    networks:
      - services-network
  

  history-db:
    image: postgres:13-alpine
    container_name: history-db
    environment:
      POSTGRES_DB: "${HISTORY_APP_DB}"
      POSTGRES_USER: "${HISTORY_APP_DB_USER}"
      POSTGRES_PASSWORD: "${HISTORY_APP_DB_PASSWORD}"
    expose:
      - 5432
    networks:
      - services-network
  

  ui-app:
    build: services/ui_app
    entrypoint: [ "/bin/sh","-c" ]
    container_name: ui-app 
    command: 
      - python3 manage.py runserver 0.0.0.0:8000
    ports:
      - 8006:8000
    environment:
      - API_AUTH_TOKEN
    depends_on:
      - scraper-app
      - history-app
    networks:
      - services-network